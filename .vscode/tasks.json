{
    // See https://go.microsoft.com/fwlink/?LinkId=733558
    // for the documentation about the tasks.json format
    "version": "2.0.0",
    "tasks": [
        // Build tasks
        {
            "label": "build",
            "detail": "Build workspace (default)",
            "type": "shell",
            "command": "colcon build --merge-install --symlink-install --base-paths src/capella_msgs src/capella_ros_launcher --cmake-args '-DCMAKE_BUILD_TYPE=RelWithDebInfo' '-DCMAKE_EXPORT_COMPILE_COMMANDS=On' -Wall -Wextra -Wpedantic",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": "$gcc"
        },
        {
            "label": "debug",
            "detail": "Build workspace (debug)",
            "type": "shell",
            "command": "colcon build --merge-install --symlink-install --packages-ignore astra_camera cartographer aruco_ros --cmake-args '-DCMAKE_BUILD_TYPE=Debug' -Wall -Wextra -Wpedantic",
            "group": "build",
            "problemMatcher": "$gcc"
        },
        {
            "label": "build nav2",
            "detail": "Build Navigation2 Packages",
            "type": "shell",
            "command": "colcon build --merge-install --symlink-install --base-paths src/navigation2  --parallel-workers 1 --cmake-args '-DCMAKE_BUILD_TYPE=RelWithDebInfo' '-DCMAKE_EXPORT_COMPILE_COMMANDS=On' -Wall -Wextra -Wpedantic",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": "$gcc"
        },

        {
            "label": "build nav2_all",
            "detail": "Build Navigation2 Packages",
            "type": "shell",
            "command": "colcon build --merge-install --symlink-install --base-paths src/navigation2/ --parallel-workers 1 --cmake-args '-DCMAKE_BUILD_TYPE=RelWithDebInfo' '-DCMAKE_EXPORT_COMPILE_COMMANDS=On' -Wall -Wextra -Wpedantic",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": "$gcc"
        },
        
        {
            "label": "build nav2_bt_navigator",
            "detail": "Build Navigation2 Packages",
            "type": "shell",
            "command": "colcon build --merge-install --symlink-install --base-paths src/navigation2/nav2_bt_navigator src/test_nav2/navigation2/nav2_util  --parallel-workers 1 --cmake-args '-DCMAKE_BUILD_TYPE=RelWithDebInfo' '-DCMAKE_EXPORT_COMPILE_COMMANDS=On' -Wall -Wextra -Wpedantic",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": "$gcc"
        },

        {
            "label": "build capella_ros_launch",
            "detail": "Build capella_ros_launch Packages",
            "type": "shell",
            "command": "colcon build --merge-install --symlink-install --base-paths src/capella_ros_launcher  --parallel-workers 1 --cmake-args '-DCMAKE_BUILD_TYPE=RelWithDebInfo' '-DCMAKE_EXPORT_COMPILE_COMMANDS=On' -Wall -Wextra -Wpedantic",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": "$gcc"
        },
        {
            "label": "start nav2",
            "detail": "start Navigation2 Packages",
            "type": "shell",
            "command": "CYCLONEDDS_URI=/map/dds.xml ros2 launch capella_ros_launcher nav2_only.launch.py namespace:=MK9 use_namespace:=True",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": "$gcc"
        },
        {
            "label": "build nav2rotation",
            "detail": "Build Navigation2 Packages",
            "type": "shell",
            "command": "colcon build --merge-install --symlink-install --base-paths src/navigation2/nav2_rotation_shim_controller --cmake-args '-DCMAKE_BUILD_TYPE=RelWithDebInfo' '-DCMAKE_EXPORT_COMPILE_COMMANDS=On' -Wall -Wextra -Wpedantic",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": "$gcc"
        },
        {
            "label": "build apriltag-ros",
            "detail": "Build Navigation2 Packages",
            "type": "shell",
            "command": "colcon build --merge-install --symlink-install --base-paths src/apriltag_ros --cmake-args '-DCMAKE_BUILD_TYPE=RelWithDebInfo' '-DCMAKE_EXPORT_COMPILE_COMMANDS=On' -Wall -Wextra -Wpedantic",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": "$gcc"
        },
        {
            "label": "build pointcloud_to_laserscan",
            "detail": "Build pointcloud_to_laserscan Packages",
            "type": "shell",
            "command": "colcon build --merge-install --symlink-install --base-paths src/pointcloud_to_laserscan --cmake-args '-DCMAKE_BUILD_TYPE=RelWithDebInfo' '-DCMAKE_EXPORT_COMPILE_COMMANDS=On' -Wall -Wextra -Wpedantic",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": "$gcc"
        },
        {
            "label": "start pointcloud_to_laserscan",
            "detail": "start pointcloud_to_laserscan Packages",
            "type": "shell",
            "command": "ros2 launch pointcloud_to_laserscan sample_pointcloud_to_laserscan_launch.py ",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": "$gcc"
        },
        
        {
            "label": "build elevator_pkg",
            "detail": "Build elevator_pkg Packages",
            "type": "shell",
            "command": "colcon build --merge-install --symlink-install --base-paths src/elevator_pkg --cmake-args '-DCMAKE_BUILD_TYPE=RelWithDebInfo' '-DCMAKE_EXPORT_COMPILE_COMMANDS=On' -Wall -Wextra -Wpedantic",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": "$gcc"
        },
        {
            "label": "build wall_line_detection",
            "detail": "Build wall_line_detection Packages",
            "type": "shell",
            "command": "colcon build --merge-install --symlink-install --base-paths src/wall_line_detection --cmake-args '-DCMAKE_BUILD_TYPE=RelWithDebInfo' '-DCMAKE_EXPORT_COMPILE_COMMANDS=On' -Wall -Wextra -Wpedantic",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": "$gcc"
        },
        {
            "label": "build garage_utils_pkg",
            "detail": "Build garage_utils_pkg Packages",
            "type": "shell",
            "command": "colcon build --merge-install --symlink-install --base-paths src/garage_utils_pkg/ --cmake-args '-DCMAKE_BUILD_TYPE=RelWithDebInfo' '-DCMAKE_EXPORT_COMPILE_COMMANDS=On' -Wall -Wextra -Wpedantic",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": "$gcc"
        },
        
        {
            "label": "polygons_marker_msg",
            "detail": "pub polygons_marker_msg",
            "type": "shell",
            "command": "ros2 run garage_navigator publisher_polygons_marker ",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": "$gcc"
        },
        {
            "label": "test garage_utils_pkg",
            "detail": "test garage_utils_pkg",
            "type": "shell",
            "command": "ros2 run garage_navigator test_action --ros-args --params-file /workspaces/capella_ros_docker/src/garage_utils_pkg/garage_navigator/params/config.yaml",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": "$gcc"
        },
        
        {
            "label": "launch find_free_pose",
            "detail": "find free pose",
            "type": "shell",
            "command": "ros2 launch find_free_space find_free_space.launch.py ",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": "$gcc"
        },
        
        {
            "label": "welt",
            "detail": "welt",
            "type": "shell",
            "command": "ros2 run welt_model welt_model",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": "$gcc"
        },
        
        {
            "label": "launch compute_right_edge_path",
            "detail": "launch compute_right_edge_path",
            "type": "shell",
            "command": "ros2 launch garage_utils compute_right_edge_path.launch.py",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": "$gcc"
        },
        {
            "label": "launch garage_action",
            "detail": "launch garage_action",
            "type": "shell",
            "command": "ros2 launch garage_navigator navigation_launch.py ",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": "$gcc"
        },
        
        {
            "label": "launch robot_avoidance",
            "detail": "launch robot_avoidance",
            "type": "shell",
            "command": "ros2 run robot_avoidance robot_avoidance --ros-args --params-file /workspaces/capella_ros_docker/src/garage_utils_pkg/garage_navigator/params/dsf_nav2_for_ad_4_exhibition.yaml",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": "$gcc"
        },

        {
            "label": "build nav2_bringup",
            "detail": "Build nav2_bringup Packages",
            "type": "shell",
            "command": "colcon build --merge-install --symlink-install --base-paths src/navigation2/nav2_bringup --cmake-args '-DCMAKE_BUILD_TYPE=RelWithDebInfo' '-DCMAKE_EXPORT_COMPILE_COMMANDS=On' -Wall -Wextra -Wpedantic",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": "$gcc"
        },
        
        {
            "label": "build bond",
            "detail": "Build bond Packages",
            "type": "shell",
            "command": "colcon build --merge-install --symlink-install --base-paths src/bond --cmake-args '-DCMAKE_BUILD_TYPE=RelWithDebInfo' '-DCMAKE_EXPORT_COMPILE_COMMANDS=On' -Wall -Wextra -Wpedantic",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": "$gcc"
        },
        {
            "label": "build multi_robots",
            "detail": "Build multi_robots Packages",
            "type": "shell",
            "command": "colcon build --merge-install --symlink-install --base-paths src/multi_robots --cmake-args '-DCMAKE_BUILD_TYPE=RelWithDebInfo' '-DCMAKE_EXPORT_COMPILE_COMMANDS=On' -Wall -Wextra -Wpedantic",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": "$gcc"
        },
        {
            "label": "build multi_robots_info",
            "detail": "Build multi_robots_info Packages",
            "type": "shell",
            "command": "colcon build --merge-install --symlink-install --base-paths src/capella_multi_robots_info --cmake-args '-DCMAKE_BUILD_TYPE=RelWithDebInfo' '-DCMAKE_EXPORT_COMPILE_COMMANDS=On' -Wall -Wextra -Wpedantic",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": "$gcc"
        },
        {
            "label": "build find_free_space",
            "detail": "Build find_free_space Packages",
            "type": "shell",
            "command": "colcon build --merge-install --symlink-install --base-paths src/find_free_space --cmake-args '-DCMAKE_BUILD_TYPE=RelWithDebInfo' '-DCMAKE_EXPORT_COMPILE_COMMANDS=On' -Wall -Wextra -Wpedantic",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": "$gcc"
        },
        {
            "label": "build costmap_convertor",
            "detail": "Build costmap_convertor Packages",
            "type": "shell",
            "command": "colcon build --merge-install --symlink-install --base-paths src/teb_local_planner src/costmap_converter --cmake-args '-DCMAKE_BUILD_TYPE=RelWithDebInfo' '-DCMAKE_EXPORT_COMPILE_COMMANDS=On' -Wall -Wextra -Wpedantic",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": "$gcc"
        },
        
        {
            "label": "start wall_line_detection (debug)",
            "detail": "start wall_line_detection Packages",
            "type": "shell",
            "command": "ros2 launch wall_line_detection wall_line_detection.launch.py wall_line_log_level:=debug",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": "$gcc"
        },
        {
            "label": "build usb_camera",
            "detail": "build usb_camera",
            "type": "shell",
            "command": "colcon build --merge-install --symlink-install --base-paths src/usb_cam --cmake-args '-DCMAKE_BUILD_TYPE=RelWithDebInfo' '-DCMAKE_EXPORT_COMPILE_COMMANDS=On' -Wall -Wextra -Wpedantic",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": "$gcc"
        },
        {
            "label": "build laser-line-segment",
            "detail": "build laser-line-segment",
            "type": "shell",
            "command": "colcon build --merge-install --symlink-install --base-paths src/laser-line-segment --cmake-args '-DCMAKE_BUILD_TYPE=RelWithDebInfo' '-DCMAKE_EXPORT_COMPILE_COMMANDS=On' -Wall -Wextra -Wpedantic",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": "$gcc"
        },
        {
            "label": "start wall_line_detection (info)",
            "detail": "start wall_line_detection Packages",
            "type": "shell",
            "command": "ros2 launch wall_line_detection wall_line_detection.launch.py",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": "$gcc"
        },
        {
            "label": "start wall_line_test (info)",
            "detail": "start wall_line_detection Packages",
            "type": "shell",
            "command": "ros2 run wall_line_detection wall_line_test --ros-args --params-file /workspaces/capella_ros_docker/src/wall_line_detection/wall_line_detection/param/config.yaml",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": "$gcc"
        },
        {
            "label": "start multi_robots_avoidance",
            "detail": "start multi_robots_avoidance Packages",
            "type": "shell",
            "command": "CAPELLA_ROS_NAMESPACE=MK9 ROBOT_PRIORITY=9 ros2 launch nav2_multi_robots_avoidance multi_robots_avoidance.launch.py",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": "$gcc"
        },
        {
            "label": "start laser_line_segment",
            "detail": "start laser_line_segment Packages",
            "type": "shell",
            "command": "ros2 launch laserline laserline.launch.py",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": "$gcc"
        },
        {
            "label": "start multi_robots_info_sub",
            "detail": "start multi_robots_info_sub Packages",
            "type": "shell",
            "command": "CAPELLA_ROS_NAMESPACE=MK9 ros2 run capella_multi_robots_info multi_robots_sub_node",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": "$gcc"
        },
        {
            "label": "start multi_robots_info_pub",
            "detail": "start multi_robots_info_pub Packages",
            "type": "shell",
            "command": "CAPELLA_ROS_NAMESPACE=MK9 ros2 run capella_multi_robots_info multi_robots_pub_node",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": "$gcc"
        },
        {
            "label": "start wall_line_test (debug)",
            "detail": "start wall_line_detection Packages",
            "type": "shell",
            "command": "ros2 run wall_line_detection wall_line_test --ros-args --params-file /workspaces/capella_ros_docker/src/wall_line_detection/wall_line_detection/param/config.yaml --log-level wall_line_test:=debug",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": "$gcc"
        },

        {
            "label": "build apriltag",
            "detail": "Build Navigation2 Packages",
            "type": "shell",
            "command": "colcon build --merge-install --symlink-install --base-paths src/apriltag --cmake-args '-DCMAKE_BUILD_TYPE=RelWithDebInfo' '-DCMAKE_EXPORT_COMPILE_COMMANDS=On' -Wall -Wextra -Wpedantic",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": "$gcc"
        },
        {
            "label": "build astra",
            "detail": "Build Navigation2 Packages",
            "type": "shell",
            "command": "colcon build --merge-install --symlink-install --base-paths src/aruco_marker_location/ros2_astra_camera/astra_camera src/aruco_marker_location/ros2_astra_camera/astra_camera_msgs src/aruco_marker_location/aruco_ros/aruco src/aruco_marker_location/aruco_ros/aruco_msgs src/aruco_marker_location/aruco_ros/aruco_ros --cmake-args '-DCMAKE_BUILD_TYPE=RelWithDebInfo' '-DCMAKE_EXPORT_COMPILE_COMMANDS=On' -Wall -Wextra -Wpedantic",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": "$gcc"
        },
        {
            "label": "start camera",
            "detail": "start camera",
            "type": "shell",
            "command": "CAMERA1_NUMBER=CH2Y83100DL CAMERA2_NUMBER=CH2F9310032 CAMERA3_NUMBER=CH23C4200W2  ros2 launch astra_camera multi_dabai_dcw.launch.py ",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": "$gcc"
        },
        {
            "label": "build capella_clean_garbage",
            "detail": "Build capella_clean_garbage",
            "type": "shell",
            "command": "colcon build --merge-install --symlink-install --base-paths src/capella_clean_garbage --cmake-args '-DCMAKE_BUILD_TYPE=RelWithDebInfo' '-DCMAKE_EXPORT_COMPILE_COMMANDS=On' -Wall -Wextra -Wpedantic",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": "$gcc"
        },
        {
            "label": "build dock",
            "detail": "Build Navigation2 Packages",
            "type": "shell",
            "command": "colcon build --merge-install --symlink-install --base-paths src/capella_ros_dock/capella_ros_dock src/capella_ros_dock/capella_ros_dock_msgs --cmake-args '-DCMAKE_BUILD_TYPE=RelWithDebInfo' '-DCMAKE_EXPORT_COMPILE_COMMANDS=On' -Wall -Wextra -Wpedantic",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": "$gcc"
        },
        {
            "label": "build wall_line_detection",
            "detail": "Build wall_line_detection Packages",
            "type": "shell",
            "command": "colcon build --merge-install --symlink-install --base-paths src/wall_line_detection --cmake-args '-DCMAKE_BUILD_TYPE=RelWithDebInfo' '-DCMAKE_EXPORT_COMPILE_COMMANDS=On' -Wall -Wextra -Wpedantic",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": "$gcc"
        },
        {
            "label": "build charge",
            "detail": "Build Navigation2 Packages",
            "type": "shell",
            "command": "colcon build --merge-install --symlink-install --base-paths src/charge_manager_pkg/charge_manager src/charge_manager_pkg/charge_manager_msgs --cmake-args '-DCMAKE_BUILD_TYPE=RelWithDebInfo' '-DCMAKE_EXPORT_COMPILE_COMMANDS=On' -Wall -Wextra -Wpedantic",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": "$gcc"
        },
        {
            "label": "build capella_msgs",
            "detail": "Build Navigation2 Packages",
            "type": "shell",
            "command": "colcon build --merge-install --symlink-install --base-paths src/capella_msgs/capella_ros_msg src/capella_msgs/capella_ros_service_interfaces --cmake-args '-DCMAKE_BUILD_TYPE=RelWithDebInfo' '-DCMAKE_EXPORT_COMPILE_COMMANDS=On' -Wall -Wextra -Wpedantic",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": "$gcc"
        },
        {
            "label": "build welt_model",
            "detail": "Build Navigation2 Packages",
            "type": "shell",
            "command": "colcon build --merge-install --symlink-install --base-paths src/welt_model --cmake-args '-DCMAKE_BUILD_TYPE=RelWithDebInfo' '-DCMAKE_EXPORT_COMPILE_COMMANDS=On' -Wall -Wextra -Wpedantic",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": "$gcc"
        },
        {
            "label": "build robot_avoidance",
            "detail": "Build Navigation2 Packages",
            "type": "shell",
            "command": "colcon build --merge-install --symlink-install --base-paths src/robot_avoidance --cmake-args '-DCMAKE_BUILD_TYPE=RelWithDebInfo' '-DCMAKE_EXPORT_COMPILE_COMMANDS=On' -Wall -Wextra -Wpedantic",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": "$gcc"
        },
        {
            "label": "build cartographer",
            "detail": "Build Cartographer Packages",
            "type": "shell",
            "command": "colcon build --merge-install --symlink-install --base-paths src/cartographer/ src/cartographer_ros/cartographer_ros --cmake-args '-DCMAKE_BUILD_TYPE=RelWithDebInfo' '-DCMAKE_EXPORT_COMPILE_COMMANDS=On' -Wall -Wextra -Wpedantic",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": "$gcc"
        },
        {
            "label": "build image_transport",
            "detail": "Build Cartographer Packages",
            "type": "shell",
            "command": "colcon build --merge-install --symlink-install --base-paths src/image_common/image_transport --cmake-args '-DCMAKE_BUILD_TYPE=RelWithDebInfo' '-DCMAKE_EXPORT_COMPILE_COMMANDS=On' -Wall -Wextra -Wpedantic",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": "$gcc"
        },
        {
            "label": "build capella_serial_pack_hcj",
            "detail": "Build capella_serial_pack_hcj Packages",
            "type": "shell",
            "command": "colcon build --merge-install --symlink-install --base-paths src/capella_serial_pack_hcj/capella_ros_auto_charge_ctrl src/capella_serial_pack_hcj/capella_ros_calib  src/capella_serial_pack_hcj/capella_ros_imu_calib src/capella_serial_pack_hcj/capella_ros_imu_filter src/capella_serial_pack_hcj/capella_ros_lidar_correction src/capella_serial_pack_hcj/capella_ros_scan_odom  src/capella_serial_pack_hcj/capella_ros_serial src/capella_serial_pack_hcj/csm src/capella_serial_pack_hcj/capella_ros_imu_ekf --cmake-args '-DCMAKE_BUILD_TYPE=RelWithDebInfo' '-DCMAKE_EXPORT_COMPILE_COMMANDS=On' -Wall -Wextra -Wpedantic",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": "$gcc"
        },
        {
            "label": "build capella_lidar_pack_wxb",
            "detail": "Build capella_lidar_pack_wxb Packages",
            "type": "shell",
            "command": "colcon build --merge-install --symlink-install --base-paths src/capella_lidar_pack_wxb/lidar_detect_person src/capella_lidar_pack_wxb/wj_716n_lidar src/capella_lidar_pack_wxb/wr_ls_udp src/capella_lidar_pack_wxb/wr_klm_high_80  --cmake-args '-DCMAKE_BUILD_TYPE=RelWithDebInfo' '-DCMAKE_EXPORT_COMPILE_COMMANDS=On' -Wall -Wextra -Wpedantic",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": "$gcc"
        },
        {
            "label": "build nanodet_client",
            "detail": "Build capella_nanodet_client_gpu Packages",
            "type": "shell",
            "command": "colcon build --merge-install --symlink-install --base-paths src/capella_nanodet_client_gpu  --cmake-args '-DCMAKE_BUILD_TYPE=RelWithDebInfo' '-DCMAKE_EXPORT_COMPILE_COMMANDS=On' -Wall -Wextra -Wpedantic",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": "$gcc"
        },

        // Test tasks
        {
            "label": "test",
            "detail": "Run all unit tests and show results.",
            "type": "shell",
            "command": "colcon test --merge-install --symlink-install; colcon test-result",
            "group": {
                "kind": "test",
                "isDefault": true
            }
        },
        // Clean
        {
            "label": "clean",
            "detail": "Run the clean target",
            "type": "shell",
            "command": "colcon build --cmake-target clean",
            "problemMatcher": "$gcc"
        },
        {
            "label": "purge",
            "detail": "Purge workspace by deleting all generated files.",
            "type": "shell",
            "command": "rm -fr build install log; py3clean .",
            "problemMatcher": []
        },
        // Linting and static code analysis tasks
        {
            "label": "fix",
            "detail": "Reformat files with uncrustify.",
            "type": "shell",
            "command": "ament_uncrustify --reformat src/",
            "problemMatcher": []
        },
        {
            "label": "uncrustify",
            "detail": "Lint files with uncrustify.",
            "type": "shell",
            "command": "ament_uncrustify src/",
            "presentation": {
                "panel": "dedicated",
                "reveal": "silent",
                "clear": true
            },
            "problemMatcher": [
                {
                    "owner": "uncrustify",
                    "source": " uncrustify",
                    "fileLocation": "relative",
                    "pattern": [
                        /// just the file name message
                        {
                            "regexp": "^(.*)'(.*)':",
                            "kind": "file",
                            "file": 2,
                            "message": 1
                        },
                    ]
                }
            ]
        },
        {
            "label": "cpplint",
            "detail": "Lint files with cpplint.",
            "type": "shell",
            "command": "ament_cpplint src/",
            "presentation": {
                "panel": "dedicated",
                "reveal": "silent",
                "clear": true
            },
            "problemMatcher": [
                {
                    "owner": "cpplint",
                    "source": " cpplint",
                    "fileLocation": "absolute",
                    "pattern": [
                        {
                            "regexp": "^(.+):(\\d+):\\s+(.+)\\[(.+)\\]$",
                            "file": 1,
                            "line": 2,
                            "message": 3,
                            "code": 4
                        }
                    ]
                }
            ]
        },
        {
            "label": "cppcheck",
            "detail": "Run static code checker cppcheck.",
            "type": "shell",
            "command": "ament_cppcheck src/",
            "presentation": {
                "panel": "dedicated",
                "reveal": "silent",
                "clear": true
            },
            "problemMatcher": [
                {
                    "owner": "cppcheck",
                    "source": "cppcheck",
                    "pattern": [
                        {
                            "regexp": "^\\[(.+):(\\d+)\\]:\\s+(.+)$",
                            "file": 1,
                            "line": 2,
                            "message": 3
                        }
                    ]
                }
            ]
        },
        {
            "label": "lint_cmake",
            "detail": "Run lint on cmake files.",
            "type": "shell",
            "command": "ament_lint_cmake src/",
            "presentation": {
                "panel": "dedicated",
                "reveal": "silent",
                "clear": true
            },
            "problemMatcher": [
                {
                    "owner": "lint_cmake",
                    "source": "lint_cmake",
                    "pattern": [
                        {
                            "regexp": "^(.+):(\\d+):\\s+(.+)$",
                            "file": 1,
                            "line": 2,
                            "message": 3
                        }
                    ]
                }
            ]
        },
        {
            "label": "flake8",
            "detail": "Run flake8 on python files.",
            "type": "shell",
            "command": "ament_flake8 src/",
            "presentation": {
                "panel": "dedicated",
                "reveal": "silent",
                "clear": true
            },
            "problemMatcher": [
                {
                    "owner": "flake8",
                    "source": "flake8",
                    "pattern": [
                        {
                            "code": 4,
                            "column": 3,
                            "file": 1,
                            "line": 2,
                            "message": 5,
                            "regexp": "^(.+):(\\d+):(\\d+): (\\w\\d+) (.+)$"
                        }
                    ]
                }
            ]
        },
        {
            "label": "pep257",
            "detail": "Run pep257 on python files.",
            "type": "shell",
            "command": "ament_pep257 src/",
            "presentation": {
                "panel": "dedicated",
                "reveal": "silent",
                "clear": true
            },
            "problemMatcher": [
                {
                    "owner": "pep257",
                    "source": "pep257",
                    "pattern": [
                        {
                            "regexp": "^(.+):(\\d+)\\s+(.+):\\s+(.+):\\s+(.+)$",
                            "file": 1,
                            "line": 2,
                            "code": 4,
                            "message": 5
                        }
                    ]
                }
            ]
        },
        {
            "label": "xmllint",
            "detail": "Run xmllint on xml files.",
            "type": "shell",
            "command": "ament_xmllint src/",
            "presentation": {
                "panel": "dedicated",
                "reveal": "silent",
                "clear": true
            },
            "problemMatcher": [
                {
                    "owner": "xmllint",
                    "source": "xmllint",
                    "fileLocation": "absolute",
                    "pattern": [
                        {
                            "regexp": "^(.+):(\\d+):\\s+(.+)\\s+:\\s+(.+)$",
                            "file": 1,
                            "line": 2,
                            "code": 3,
                            "message": 4
                        }
                    ]
                }
            ]
        },
        {
            "label": "lint all",
            "detail": "Run all linters.",
            "dependsOn": [
                "cppcheck",
                "cpplint",
                "flake8",
                "lint_cmake",
                "pep257",
                "xmllint",
                "uncrustify"
            ],
            "problemMatcher": []
        },
        // Workspace editing tasks
        {
            "label": "new ament_cmake package",
            "detail": "Create a new ROS cpp package from a template.",
            "type": "shell",
            "command": "ros2 pkg create --destination-directory src --build-type ament_cmake ${input:package}",
            "problemMatcher": []
        },
        {
            "label": "new ament_python package",
            "detail": "Create a new ROS python package from a template.",
            "type": "shell",
            "command": "ros2 pkg create --destination-directory src --build-type ament_python ${input:package}",
            "problemMatcher": []
        },
        {
            "label": "import from workspace file",
            "detail": "Use vcs to import modules specified by a workspace/rosinstall file.",
            "type": "shell",
            "command": "vcs import < src/ros2.repos src",
            "problemMatcher": []
        },
        {
            "label": "update workspace file",
            "detail": "Use vcs to update repositories in src to workspace file.",
            "type": "shell",
            "command": "vcs export src > src/ros2.repos",
            "problemMatcher": []
        },
        {
            "label": "install dependencies",
            "detail": "Install all dependencies specified in the workspaces package.xml files.",
            "type": "shell",
            "command": "sudo apt-get update && rosdepc update && rosdepc install --from-paths src --ignore-src  -y",
            "problemMatcher": []
        },
        {
            "label": "Start Websocket Bridge and Node Manager",
            "detail": "Bridge communication bewteen ROS2 and outside world.",
            "type": "shell",
            "command": "ros2 launch capella_nav_and_carto_server launch.xml headless:=False",
            "problemMatcher": []
        }
    ],
    "inputs": [
        {
            "id": "package",
            "type": "promptString",
            "description": "Package name"
        }
    ]
}